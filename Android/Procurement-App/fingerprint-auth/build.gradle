apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.github.kt3k.coveralls'

version = "1.0.1"     // This is the library version used when deploying the artifact

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

coveralls {
    sourceDirs = files('library/src/main/java').flatten()
    jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

tasks.coveralls {
    dependsOn 'connectedAndroidTest'
    onlyIf { System.env.'CI' }
}

dependencies {
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.dlazaro66.qrcodereaderview:qrcodereaderview:2.0.2'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'cn.pedant.sweetalert:library:1.3'
    compile 'com.google.code.gson:gson:2.8.2'
}

//#################################### Bintray ####################################//
if (project.rootProject.file('local.properties').exists()) {
    apply plugin: 'com.jfrog.bintray'

    def siteUrl = 'https://github.com/multidots/android-fingerprint-authentication/'        // Homepage URL of the library
    def gitUrl = 'https://github.com/multidots/android-fingerprint-authentication.git'      // Git repository URL

    group = "com.multidots"

    install {
        repositories.mavenInstaller {
            // This generates POM.xml with proper parameters
            pom {
                project {
                    packaging 'aar'

                    // Add your description here
                    name 'fingerprint-auth'
                    description = 'An android library that allows you to easily integrate and manage fingerprint authentication in your app.'
                    url siteUrl

                    // Set your license
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'multidots'
                            name 'Multidots Solutions Pvt Ltd'
                            email 'info@multidots.in'
                        }
                    }
                    scm {
                        connection gitUrl
                        developerConnection gitUrl
                        url siteUrl
                    }
                }
            }
        }
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
    //    archives javadocJar
        archives sourcesJar
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    // https://github.com/bintray/gradle-bintray-plugin
    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")

        configurations = ['archives']
        pkg {
            repo = "md-maven"
            // it is the name that appears in bintray when logged
            name = "fingerprint-auth"
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
            version {
                gpg {
                    sign = false //Determines whether to GPG sign the files. The default is false
    //                passphrase = properties.getProperty("bintray.gpg.password") //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}
